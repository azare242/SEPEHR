CREATE TABLE Users (
  ID VARCHAR(255) NOT NULL,
  FNAME VARCHAR(45) NULL,
  LNAME VARCHAR(45) NULL,
  PHONE_NUMBER CHAR(11) NULL,
  EMAIL VARCHAR(45) NULL,
  PRIMARY KEY (ID)
);
CREATE TABLE Passwords (
  USER_ID VARCHAR(255) NOT NULL,
  Encrypted_Password VARCHAR(1023) NOT NULL,
  PRIMARY KEY (USER_ID),
  CONSTRAINT PW_USER_ID
    FOREIGN KEY (USER_ID)
    REFERENCES Users (ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);
CREATE TABLE security_questions (
  USER_ID VARCHAR(255) NOT NULL,
  Question VARCHAR(1023) NULL,
  Answer VARCHAR(1023) NULL,
  PRIMARY KEY (USER_ID),
  CONSTRAINT SQ_USER_ID
    FOREIGN KEY (USER_ID)
    REFERENCES users (ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);
CREATE TABLE friends(
	TAG INT NOT NULL,
	USER_ID1,
	USER_ID2,
	PRIMARY KEY(TAG),
	CONSTRAINT F1_USER_ID
		FOREIGN KEY (USER_ID1)
		REFERENCES users (ID)
		 ON DELETE SET NULL
		 ON UPDATE SET NULL,
	CONSTRAINT F2_USER_ID
	FOREIGN KEY (USER_ID2)
	REFERENCES users (ID)
		ON DELETE SET NULL
		ON UPDATE SET NULL
);
CREATE TABLE penalties (
  USER_ID VARCHAR(255) NOT NULL,
  ENDTIME DATETIME NOT NULL,
  ATTEMPED_FOR INT NOT NULL,
  PRIMARY KEY (USER_ID),
  CONSTRAINT P_USER_ID
    FOREIGN KEY (USER_ID)
    REFERENCES users (ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);
CREATE TABLE blocks (
  tag INT NOT NULL AUTO_INCREMENT,
  USER_ID_BLOCKER VARCHAR(45) NULL,
  USER_ID_BLOCKED VARCHAR(45) NULL,
  PRIMARY KEY (tag),
  INDEX B1_USER_ID_idx (USER_ID_BLOCKER ASC) VISIBLE,
  INDEX B2_USER_ID_idx (USER_ID_BLOCKED ASC) VISIBLE,
  CONSTRAINT B1_USER_ID
    FOREIGN KEY (USER_ID_BLOCKER)
    REFERENCES users (ID)
    ON DELETE SET NULL
    ON UPDATE SET NULL,
  CONSTRAINT B2_USER_ID
    FOREIGN KEY (USER_ID_BLOCKED)
    REFERENCES users (ID)
    ON DELETE SET NULL
    ON UPDATE SET NULL
);
CREATE TABLE `sepehr`.`pending_friend_requests` (
  tag INT NOT NULL AUTO_INCREMENT,
  USER_ID_SENDER VARCHAR(255) NOT NULL,
  USER_ID_RECIVER VARCHAR(255) NOT NULL,
  IS_ACCEPTED INT NOT NULL DEFAULT 0,
  PRIMARY KEY (tag),
  INDEX PFS_USER_ID_idx (USER_ID_SENDER ASC) VISIBLE,
  INDEX PFR_USER_ID_idx (USER_ID_RECIVER ASC) VISIBLE,
  CONSTRAINT PFS_USER_ID
    FOREIGN KEY (USER_ID_SENDER)
    REFERENCES users (ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT PFR_USER_ID
    FOREIGN KEY (USER_ID_RECIVER)
    REFERENCES users (ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);
CREATE TABLE messages (
  ID VARCHAR(511) NOT NULL,
  TEXT VARCHAR(4095) NOT NULL,
  TIME DATETIME NOT NULL,
  IsRead INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`)
 );
CREATE TABLE `sepehr`.`sender_reciver_messages` (
  teg INT NOT NULL AUTO_INCREMENT,
  MESSAGE_ID VARCHAR(511) NULL,
  USER_ID_RECIVER VARCHAR(255) NULL,
  USER_ID_SENDER VARCHAR(255) NULL,
  PRIMARY KEY (teg),
  INDEX SM_USER_IR_idx (USER_ID_SENDER ASC) VISIBLE,
  INDEX RV_USER_ID_idx (USER_ID_RECIVER ASC) VISIBLE,
  INDEX SR_MESSAGE_ID_idx (MESSAGE_ID ASC) VISIBLE,
  CONSTRAINT SM_USER_ID
    FOREIGN KEY (USER_ID_SENDER)
    REFERENCES users (ID)
    ON DELETE SET NULL
    ON UPDATE SET NULL,
  CONSTRAINT RV_USER_ID
    FOREIGN KEY (USER_ID_RECIVER)
    REFERENCES users (ID)
    ON DELETE SET NULL
    ON UPDATE SET NULL,
  CONSTRAINT SR_MESSAGE_ID
    FOREIGN KEY (MESSAGE_ID)
    REFERENCES messages(ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);
CREATE TABLE likes (
  tag INT NOT NULL,
  MESSAGE_ID VARCHAR(511) NOT NULL,
  USER_ID_LIKER VARCHAR(255) NULL,
  PRIMARY KEY (tag),
  INDEX L_USER_ID_idx (USER_ID_LIKER ASC) VISIBLE,
  INDEX L_MESSAGE_ID_idx (MESSAGE_ID ASC) VISIBLE,
  CONSTRAINT L_USER_ID
    FOREIGN KEY (USER_ID_LIKER)
    REFERENCES users (ID)
    ON DELETE SET NULL
    ON UPDATE SET NULL,
  CONSTRAINT L_MESSAGE_ID
    FOREIGN KEY (MESSAGE_ID)
    REFERENCES messages (ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);
CREATE TABLE logs (
  ID INT NOT NULL AUTO_INCREMENT,
  TYPE VARCHAR(10) NOT NULL,
  TEXT VARCHAR(4095) NOT NULL,
  TIME DATETIME NOT NULL,
  PRIMARY KEY (ID)
);
